# SPDX-FileCopyrightText: 2023 Klar√§lvdalens Datakonsult AB, a KDAB Group company <info@kdab.com>
#
# SPDX-License-Identifier: MIT

name: CI

on:
  push:
    branches:
      - master
      - 1.1
  pull_request:
    branches:
      - master
      - 1.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

        build_type:
          - Debug

        config:
          - qt_version: "5.15.2"
            cmake_osx_architectures: "x86_64"

          - qt_version: "6.5.3"

    steps:
      - name: Install Qt with options and default aqtversion
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: null # use whatever the default is
          version: ${{ matrix.config.qt_version }}
          cache: true

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install ninja-build tool (must be after Qt due PATH changes)
        uses: turtlesec-no/get-ninja@main

      - name: Make sure MSVC is found when Ninja generator is in use
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure project
        run: >
          cmake -S . -B ./build -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_OSX_ARCHITECTURES=${{ matrix.config.cmake_osx_architectures}}
          -DKDSingleApplication_QT6=${{ startsWith(matrix.config.qt_version, '6.') }}
          -DKDSingleApplication_DEVELOPER_MODE=${{ matrix.build_type == 'Debug' }}
          -DKDSingleApplication_TESTS=${{ matrix.build_type == 'Debug' }}
          -DKDSingleApplication_EXAMPLES=${{ matrix.build_type == 'Debug' }}
          -DKDSingleApplication_DOCS=${{ matrix.build_type == 'Debug' && runner.os == 'Linux' }}

      - name: Build Project
        run: cmake --build ./build

      - name: Run tests on Linux (offscreen)
        if: ${{ matrix.build_type == 'Debug' && runner.os == 'Linux' }}
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure
        env:
          QT_QPA_PLATFORM: offscreen

      - name: Run tests on macOS
        if: ${{ matrix.build_type == 'Debug' && runner.os == 'macOS' }}
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure

        # Exclude stress test, proper QProcess cleanup fixed local tests, but at CI it's flaky
      - name: Run tests on Windows
        if: ${{ matrix.build_type == 'Debug' && runner.os == 'Windows' }}
        run: ctest -V --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure --exclude-regex "tst_stresstest"

      - name: Read tests log when it fails
        uses: andstor/file-reader-action@v1
        if: ${{ failure() && matrix.build_type == 'Debug' }}
        with:
          path: "./build/Testing/Temporary/LastTest.log"
